<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAfGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABjZSURBVHja7d0HdBXV2gbgmXPSSUIJIb2SctIhpAGJBEKXLtXQA7GEXqQqIhZApUkV
        QbiooFxBBFF+BEVURNQLUgRB6QhCAEERae+/96Rc4kJILjnnzIH3Wetb4a7Fjclmvnf2zJm9R1GIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiCxIFeUjKlpUvA1XjKgoUSZREaKqiwoq
        /N2qivIorCqiKoqyt9qIG42KMSBc+5MoO1aZysiWLT9hol5WHFx2KRU8TiuuVfPLrzzzFTunfPH98ytU
        qJDv7e2d7+Pjo3318vIqUZ6eniWqatWq+R4eHiWqSpUq+ZUrVy5RFStWvLnOuLu7nxb1q6hfRB0V9ZOb
        m9suUd+IP38tS/z5KxcXl89VVV0pfranRNUV5WDBMZcHcQPFzn6yau+wQnVwXCNqdWlLMRhWi/+/fktV
        V6sGo7m+/xpRK7VjVlGyCseS/kfVFYPxcyUoGUrDoVBaPw+lzcTyqbaToNTrB0cPP3Ttmo21a9di586d
        2LNnj/b1+++/L64dO3bgu+++w7fffqt9lbVt2zZs3bq1RH355Zf44osvimvz5s3YtGlTcX366afYuHEj
        Pv744+Jav349PvzwwxK1Zs0arFy5EnPnzkXv3r0RFBQkQ2q2nD0YVHF2UVVzjrm9aPyhhipeZ43BJhir
        x8EuPKHUZQiMhL2rO2JjY9GjRw+MGTMG48aNK66xY8di9OjRxTVq1CgMHz68RA0dOhSDBg0qUf369UNe
        Xl5xPfbYY8jNzS1ROTk56NmzJ3r16qWV/HPXrl2RnZ2tfW3Xrh1iY2Lg6FwBCa36oMXYhXhwzGvlXs1G
        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
        5Bt6Tvx7ZrKtS89V1GTFrdpv2jv1UrJFdbVc1eqova1XsXPcJX6O+lYaAydR4wICAk4PHDgQK1aswJYt
        W/Dtt98W144dO0rUzp07sWfPnhK1b98+yHcNFtWBAwe013fdXIcOHcLhw4e1r0V/PnLkCI4ePVpcx44d
        w/Hjx0vUwYMHIQOqf//+qObjhwdyJ2gvw3h8xc/3dckxeOTtvWj51GJUC0+4Iv4dJ4pyYFuXjRywRtr1
        t6LI1yu9Z8F6S9RwUSZrDoCqqnbiS11RM11cXD739PTc6+Xl9VNReXt7HxJ1uKh8fHyO+Pr6Hrupjvv5
        +f3i7+9/8qY6JULlzM0VHBycHxISUlyhoaFnw8PDz0VERBSXmI2ci46OPn9zyb/n7u4uX8t9RjUYz7h5
        +p1x9wpgiXLz9D1h5+j0mRibvoUnNLoLBguXHu/WVhTlX3g5EqTdLFWUEFGhN1V17VOUkhUhKvJvFfW3
        ku+uiy+sOFEJohL/VsmiUv9WCbf4XqyCChdVia1LRERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE
        RERERERERERERBb1/3mrRJh0JN5xAAAAAElFTkSuQmCC
</value>
  </data>
</root>